name: .NET Core Build and Test

on:
  push:
    branches:
      - main   # Aciona o workflow quando houver um push para a branch principal
  pull_request:
    branches:
      - main   # Também aciona para pull requests na branch principal

jobs:
  build:
    runs-on: ubuntu-latest   # Definindo o ambiente onde os testes serão executados (pode usar windows-latest ou macos-latest)

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'  # Define a versão do .NET Core que você está utilizando

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Set secrets as environment variables
        run: |
          echo "TEST_EMAIL=${{ secrets.TEST_EMAIL }}" >> $GITHUB_ENV
          echo "TEST_PASSWORD=${{ secrets.TEST_PASSWORD }}" >> $GITHUB_ENV

      - name: Run tests
        run: dotnet test --logger "trx;LogFileName=TestResults.trx"   # Executando os testes e gerando o arquivo .trx

      - name: Publish test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: TestResults/TestResults.trx   # Caminho onde os resultados do teste são armazenados

      - name: Generate LivingDoc Report
        run: |
          livingdoc test-assembly bin/Debug/net8.0/AutomationEcommerce.dll -t TestResults/TestResults.trx
          mv LivingDoc.html $GITHUB_WORKSPACE/LivingDoc.html   # Movendo o relatório gerado para o workspace do GitHub

      - name: Upload LivingDoc report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: livingdoc-report
          path: LivingDoc.html   # Caminho do arquivo LivingDoc gerado
